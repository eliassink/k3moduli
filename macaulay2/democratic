loadPackage "MultiprojectiveVarieties"

pointsCollide = (P,pts) -> sum (for p in drop(pts,1) list minors (2,submatrix(P,{first pts, p})))

anyPointsCollide = (P,k) -> intersect (for pts in subsets(numcols P,k) list pointsCollide(P,pts))

collinear = (P,pts) -> minors (3,submatrix (P,pts))

anyCollinear = (P,k) -> intersect (for pts in subsets(numcols P,k) list collinear(P,pts))

unstableLocus = P -> (
	m := (numcols P - 1) // 3 + 1;
	n :=  (2 * numcols P - 1) // 3 + 1;
	intersect(anyPointsCollide (P,m), anyCollinear(P,n))
)

linesIdeal = (P,L) -> sum apply(L,l->collinear(P,l))

projectiveFrame = {Field => ZZ/65357} >> o -> (n,i's) -> (
	R := ring projectiveVariety(toList((n-4):2),o.Field);
        standard := {{1,0,0},{0,1,0},{0,0,1},{1,1,1}};
        P := matrix table(3,n,(j,i) ->
                if any(i's,k->k==i)
                then standard#(position(i's,k->k==i))#j
                else R_(3*(i-number(i's,k->k<i))+j)
        );
        P
)

affineCharts = {Field => ZZ/65357} >> o -> (n,i's) -> (
	P := projectiveFrame(n,i's,Field=>o.Field);
	R := ring P;
	A := o.Field[a_0..a_(2*(n-4)-1)];
	
	affineChart = chart -> (
		k := 0;
		sub(P,for i from 0 to 3*(n-4)-1 list 
			(R_i => if (i%3) == chart#(i//3) then 1 else (k = k+1; A_(k-1))))
	);
	for chart in (n-4:0)..(n-4:2) list affineChart(chart)
)

stableIsSmooth = -> (P,L) -> (
	I := linesIdeal(P,L);
	1 % I == 0 or (
		S := singularLocus linesIdeal(P,L);
		uns:= unstableLocus(sub(P,S));
		uns == 0 or isSubset(uns,radical ideal 0_S)
	)
)

allIrreducible = {Field=>ZZ/65357,Verbose=>false} >> o -> L -> (
	n := #unique(flatten L);
	all (subsets(n,4), i's->(
		if o.Verbose then print i's;
		X := projectiveVariety linesIdeal (projectiveFrame(n,i's,Field=>o.Field),L);
		comps = #decompose X;
		if o.Verbose then print comps;
		comps <= 1
		)
	)
)

allSmooth = {Field=>ZZ/65357,Verbose=>false} >> o -> L -> (
	n := #unique(flatten L);
	all (subsets(n,4), i's->(
		sm := all(affineCharts(n,i's,Field=>o.Field),P->stableIsSmooth(P,L));
		if o.Verbose then print sm;
		sm
		)
	)
)

L1 := {{1,2,4},{1,3,8},{1,7,9},{2,3,7},{2,5,9},{3,5,0},{4,5,6},{4,8,0},{6,7,8},{6,9,0}};

allIrreducible(L1)
allSmooth(L1)
